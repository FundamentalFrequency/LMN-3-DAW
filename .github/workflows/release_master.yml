name: release:master

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    runs-on: ubuntu-20.04
    container: stonepreston/juce_compiler:latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: master
          submodules: recursive

      - name: build using cmake
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --target Tests -j8
      - name: run unit tests
        run: |
          ./build/Tests/Tests_artefacts/Release/Tests

  release_x86_64:
    runs-on: ubuntu-20.04
    container: stonepreston/juce_compiler:latest

    needs: test

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: master
          submodules: recursive

      - name: Set hash
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: release
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build -j8
          zip -r LMN3-x86_64.zip ./build/LMN3_artefacts/ ./build/Plugins/ ./LICENSE
      - uses: "softprops/action-gh-release@v1"
        with:
          draft: true
          name: ${{ steps.vars.outputs.sha_short }}-x86_64
          tag_name: ${{ steps.vars.outputs.sha_short }}-x86_64
          files: |
            ./LMN3-x86_64.zip

  release_arm:
    runs-on: ubuntu-20.04
    container: stonepreston/juce_rpi4_cross_compiler:latest

    needs: test

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: master
          submodules: recursive

      - name: Set hash
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: release
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/toolchain/toolchain.cmake
          cmake --build build -j8
          zip -r LMN3-arm-linux-gnueabihf.zip ./build/LMN3_artefacts/ ./build/Plugins/ ./LICENSE
      - uses: "softprops/action-gh-release@v1"
        with:
          draft: true
          name: ${{ steps.vars.outputs.sha_short }}-arm-linux-gnueabihf
          tag_name: ${{ steps.vars.outputs.sha_short }}-arm-linux-gnueabihf
          files: |
            ./LMN3-arm-linux-gnueabihf.zip
